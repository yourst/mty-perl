#!/usr/bin/perl -w
# -*- cperl -*-
#
# MTY::Display::SimpleColorize
#
# Copyright 2003 - 2014 Matt T. Yourst <yourst@yourst.com>
#
# Simplified constant value based version of full Colorize module
# (does not depend on any other packages)
#

package MTY::Display::SimpleColorize;

use integer; use warnings; use Exporter::Lite;

our @EXPORT = # (auto-generated by perl-mod-deps)
  qw($B $BLINK $BLINKX $C $G $K $M $R $U $UX $V $VX $W $Y $bgB $bgC $bgG $bgK
     $bgM $bgR $bgW $bgY %fixed_colors %rgb_colors ANSI_CONSOLE_ESC
     ANSI_CONSOLE_OSC ANSI_CONSOLE_SET_BG ANSI_CONSOLE_SET_FG BLINK BLINKX CR
     END_OSC_ST EOE ESC NL TAB U UX V VX X bg_color_rgb fg_color_rgb);

use constant {
  NL => "\n",
  CR => "\r",
  TAB => "\t",
  ESC => "\e",
};

use constant {
  ANSI_CONSOLE_ESC => ESC.'[', # ANSI SGR escape
  ANSI_CONSOLE_OSC => ESC.']', # extended operating system command (OSC)
};

use constant {
  ANSI_CONSOLE_SET_FG => ANSI_CONSOLE_ESC.'1;3',
  ANSI_CONSOLE_SET_BG => ANSI_CONSOLE_ESC.'1;4',
  EOE => 'm',
  END_OSC_ST => chr(007),
};

sub fg_color_rgb { my ($r, $g, $b) = @_; return ESC.'[38;2;'.$r.';'.$g.';'.$b.'m'; }
sub bg_color_rgb { my ($r, $g, $b) = @_; return ESC.'[48;2;'.$r.';'.$g.';'.$b.'m'; }

use constant {
  X => ANSI_CONSOLE_ESC.'0'.EOE,
  U => ANSI_CONSOLE_ESC.'4'.EOE,
  V => ANSI_CONSOLE_ESC.'7'.EOE,
  BLINK => ANSI_CONSOLE_ESC.'5'.EOE,
  UX => ANSI_CONSOLE_ESC.'24'.EOE,
  VX => ANSI_CONSOLE_ESC.'27'.EOE,
  BLINKX => ANSI_CONSOLE_ESC.'25'.EOE,
};

BEGIN {
  our %fixed_colors = (
    R => ANSI_CONSOLE_SET_FG.'1'.EOE,
    G => ANSI_CONSOLE_SET_FG.'2'.EOE,
    B => ANSI_CONSOLE_SET_FG.'4'.EOE,
    C => ANSI_CONSOLE_SET_FG.'6'.EOE,
    M => ANSI_CONSOLE_SET_FG.'5'.EOE,
    Y => ANSI_CONSOLE_SET_FG.'3'.EOE,
    K => ANSI_CONSOLE_SET_FG.'9'.EOE,
    W => ANSI_CONSOLE_SET_FG.'7'.EOE,
    Q => ANSI_CONSOLE_SET_FG.'0'.EOE,

    bgR => ANSI_CONSOLE_SET_BG.'1'.EOE,
    bgG => ANSI_CONSOLE_SET_BG.'2'.EOE,
    bgB => ANSI_CONSOLE_SET_BG.'4'.EOE,
    bgC => ANSI_CONSOLE_SET_BG.'6'.EOE,
    bgM => ANSI_CONSOLE_SET_BG.'5'.EOE,
    bgY => ANSI_CONSOLE_SET_BG.'3'.EOE,
    bgK => ANSI_CONSOLE_SET_BG.'9'.EOE,
    bgW => ANSI_CONSOLE_SET_BG.'7'.EOE,
    bgQ => ANSI_CONSOLE_SET_BG.'0'.EOE,
  );

  our  %rgb_colors = (
    R => fg_color_rgb(248, 112, 112),
    G => fg_color_rgb(96,  255, 128),
    B => fg_color_rgb(128, 116, 255),
    C => fg_color_rgb(80,  224, 240),
    M => fg_color_rgb(255, 140, 255),
    Y => fg_color_rgb(255, 255, 64),
    K => fg_color_rgb(140, 140, 140),
    W => fg_color_rgb(240, 240, 240),
    Q => fg_color_rgb(0,   0,   0),

    bgR => bg_color_rgb(248, 112, 112),
    bgG => bg_color_rgb(96,  255, 128),
    bgB => bg_color_rgb(128, 116, 255),
    bgC => bg_color_rgb(80,  224, 240),
    bgM => bg_color_rgb(255, 140, 255),
    bgY => bg_color_rgb(255, 255, 64),
    bgK => bg_color_rgb(140, 140, 140),
    bgW => bg_color_rgb(240, 240, 240),
    bgQ => bg_color_rgb(0,   0,   0),
  );

  our ($R, $G, $B, $C, $M, $Y, $K, $W, $bgR, $bgG, $bgB, $bgC, $bgM, $bgY, $bgK, $bgW, $U, $UX, $V, $VX, $BLINK, $BLINKX) =
    (R, G, B, C, M, Y, K, W, bgR, bgG, bgB, bgC, bgM, bgY, bgK, bgW, U, UX, V, VX, BLINK, BLINKX);
};

# use constant \%fixed_colors;
use constant \%rgb_colors;
BEGIN { push @EXPORT, keys \%rgb_colors; };

1;
