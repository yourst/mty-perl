#!/usr/bin/perl -w
# -*- cperl-*-
#
# print-table:
#
# Copyright 2003-2015 Matt T Yourst <yourst@yourst.com>. All rights reserved.
#

use integer; use warnings;
use MTY::Common::Common;
use MTY::Common::Strings;
use MTY::Common::Hashes;
use MTY::Common::CommandLine;
use MTY::Filesystem::Files;
use MTY::Display::Colorize;
use MTY::Display::PrintableSymbols;
use MTY::Display::Table;
use MTY::RegExp::Tools;
use MTY::RegExp::Strings;
use MTY::System::POSIX;

my $max_line_width = undef;
my $separator = undef;
my @alignments = ( );

my %alignment_name_to_value = (
  'left'   => ALIGN_LEFT,  'l' => ALIGN_LEFT,  'L' => ALIGN_LEFT,  '<' => ALIGN_LEFT,  '+' => ALIGN_LEFT,
  'right'  => ALIGN_RIGHT, 'r' => ALIGN_RIGHT, 'R' => ALIGN_RIGHT, '>' => ALIGN_RIGHT, '-' => ALIGN_RIGHT,
  'center' => ALIGN_CENTER, 'middle' => ALIGN_CENTER, 'mid' => ALIGN_CENTER,
  'c' => ALIGN_CENTER, 'C' => ALIGN_CENTER, '|' => ALIGN_CENTER, '0' => ALIGN_CENTER,
);

my %command_line_options = (
  'width', [ \$max_line_width, OPTION_VALUE_REQUIRED, [ 'w' ] ],
  'separator', [ \$separator, OPTION_VALUE_REQUIRED, [qw(sep s delim)] ],
  'align', [ \@alignments, OPTION_LIST, [qw(a alignment)], \%alignment_name_to_value ],
);

my %command_line_help = (
  'width' => 'Maximum width in characters of the entire table',
  'separator' => 'Separator character(s) in the input which define the boundaries between columns (default is any of: tab, "," or ";")',
  'align' => 'Alignment of text within columns, either as a single value for all columns, or a comma separated list of per-column alignments. The possible alignments are "left", "center", "right", or equivalently, "l", "c", "r".',
);

my ($filenames, $invalid_args) = parse_and_check_command_line(%command_line_options, @ARGV, %command_line_help);

my $is_stdout_terminal = (stdout_is_terminal()) ? 1 : 0;
$max_line_width //= ($is_stdout_terminal) ? get_terminal_width_in_columns() : undef;

$separator //= '[\t\\,\;]';
my $separator_re = qr{$separator}oax;

my @lines = read_file_handle_as_lines(STDIN_FD);
my @table = ( );

foreach my $line (@lines) {
  my $fields = [ split(/$separator_re/oax, $line) ];
  push @table, $fields;
}

if (!@alignments) { @alignments = (ALIGN_LEFT); }

print_table(STDOUT, @table, colseps => '  ', row_prefix => '  ', align => @alignments, clip_to_length => $max_line_width);
