#!/usr/bin/perl -w
# -*- cperl-*-
#
# perlwhich: 
#
# Find Perl modules by their package names (e.g. Module::Name::Here),
# or list the package(s) declared in the specified *.pm Perl source files, or
# print a graphical tree by filenames (*.pm), Module::Names, or the nested
# namespace hierarchy of modules.
#
# Copyright 2003-2014 Matt T Yourst <yourst@yourst.com>. All rights reserved.
#

use integer; use warnings;
use MTY::Common::Common;
use MTY::Common::Strings;
use MTY::Common::Hashes;
use MTY::Common::CommandLine;
use MTY::Filesystem::Files;
use MTY::Display::Colorize;
use MTY::Display::PrintableSymbols;
use MTY::Display::Table;
use MTY::RegExp::Tools;
use MTY::RegExp::Strings;
use MTY::System::POSIX;

my $max_line_width = undef;
my $separator = undef;
my @alignments = ( );

my %alignment_name_to_value = (
  'left'   => ALIGN_LEFT,  'l' => ALIGN_LEFT,  'L' => ALIGN_LEFT,  '<' => ALIGN_LEFT,  '+' => ALIGN_LEFT,
  'right'  => ALIGN_RIGHT, 'r' => ALIGN_RIGHT, 'R' => ALIGN_RIGHT, '>' => ALIGN_RIGHT, '-' => ALIGN_RIGHT,
  'center' => ALIGN_CENTER, 'middle' => ALIGN_CENTER, 'mid' => ALIGN_CENTER,
  'c' => ALIGN_CENTER, 'C' => ALIGN_CENTER, '|' => ALIGN_CENTER, '0' => ALIGN_CENTER,
);

my %command_line_options = (
  'width', [ \$max_line_width, OPTION_VALUE_REQUIRED, [ 'w' ] ],
  'separator', [ \$separator, OPTION_VALUE_REQUIRED, [ 'sep', 's', 'delim' ] ],
  'align', [ \@alignments, OPTION_VALUE_REQUIRED|OPTION_APPEND_REPEATS|OPTION_COMMA_SEP_LISTS, [ 'a', 'alignment' ], \%alignment_name_to_value ],
);

my ($filenames, $invalid_args) = parse_and_check_command_line(%command_line_options, @ARGV);

my $is_stdout_terminal = (-t STDOUT) ? 1 : 0;
$max_line_width //= ($is_stdout_terminal) ? get_terminal_width_in_columns() : undef;

$separator //= '[\t\\,\;]';
my $separator_re = qr{$separator}oax;

my @lines = read_file_handle(STDIN_FD);
my @table = ( );

foreach my $line (@lines) {
  my $fields = [ split(/$separator_re/oax, $line) ];
  push @table, $fields;
}

if (!@alignments) { @alignments = (ALIGN_LEFT); }

print_table(STDOUT, @table, colseps => '  ', row_prefix => '  ', align => @alignments, clip_to_length => $max_line_width);
